{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\Learning ReactJs From Thapa\\\\todo-list-using-hooks\\\\src\\\\component\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport todo from \"../images/todo.jpg\";\nimport React, { useState, useEffect } from 'react'; // To set data from LS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getLocalItems = () => {\n  const list = localStorage.getItem(\"list\");\n  return !list ? [] : JSON.parse(localStorage.getItem(\"list\"));\n};\n\nconst Todo = () => {\n  _s();\n\n  const [inputData, setInputData] = useState();\n  const [items, setItems] = useState(getLocalItems());\n  const [ToggleSubmit, setToggleSubmit] = useState(false);\n  const [isEditItem, setisEditItem] = useState(null); //Adding items\n\n  const addItem = () => {\n    if (!inputData) {\n      setItems([...items]);\n    } else if (!ToggleSubmit && inputData) {\n      setItems(items.map(elem => {\n        if (elem.id === isEditItem) {\n          return { ...elem,\n            name: inputData\n          };\n        }\n\n        return elem;\n      }));\n      setToggleSubmit(true);\n      setInputData(\"\");\n      setisEditItem(null);\n    } else {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        name: inputData\n      };\n      setItems([...items, newItem]);\n      setInputData(\"\");\n    }\n  }; //Deleting items\n\n\n  const deleteItem = id => {\n    const updatedData = items.filter(item => {\n      return item.id !== id;\n    });\n    setItems(updatedData);\n  }; // Edit Items\n\n\n  const editItem = id => {\n    const newEditItems = items.find(elem => {\n      return elem.id === id;\n    });\n    setToggleSubmit(false);\n    setInputData(newEditItems.name);\n    setisEditItem(id);\n  }; // Adding Data to Local Storage\n\n\n  useEffect(() => {\n    localStorage.setItem(\"list\", JSON.stringify(items));\n  }, [items]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"child-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: todo,\n            alt: \"todo-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n            children: \"Add Your List Here \\uD83D\\uDCD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addItems\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => {\n              setInputData(event.target.value);\n            },\n            value: inputData,\n            placeholder: \"\\u270D\\uFE0F Add Items...\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), ToggleSubmit ? /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: () => editItem(addItem),\n            className: \"far fa-edit add-btn\",\n            title: \"Add Items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus add-btn\",\n            title: \"Update Items\",\n            onClick: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: items.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"eachItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => editItem(item.id),\n                  className: \"far fa-edit add-btn\",\n                  title: \"Edit Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  onClick: () => deleteItem(item.id),\n                  className: \"far fa-trash-alt add-btn\",\n                  title: \"Delete Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn effect04\",\n            \"data-sm-link-text\": \"Remove All\",\n            onClick: () => {\n              setItems([]);\n            },\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Check List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 27\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"4R55dc7xpIItewsphrMYGqCm1OY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/Rahul/Desktop/Learning ReactJs From Thapa/todo-list-using-hooks/src/component/Todo.jsx"],"names":["todo","React","useState","useEffect","getLocalItems","list","localStorage","getItem","JSON","parse","Todo","inputData","setInputData","items","setItems","ToggleSubmit","setToggleSubmit","isEditItem","setisEditItem","addItem","map","elem","id","name","newItem","Date","getTime","toString","deleteItem","updatedData","filter","item","editItem","newEditItems","find","setItem","stringify","event","target","value"],"mappings":"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","sourcesContent":["import todo from \"../images/todo.jpg\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// To set data from LS\r\nconst getLocalItems = () => {\r\n    const list = localStorage.getItem(\"list\")\r\n    return (!list) ? [] : JSON.parse(localStorage.getItem(\"list\"));\r\n}\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState();\r\n    const [items, setItems] = useState(getLocalItems());\r\n    const [ToggleSubmit, setToggleSubmit] = useState(false)\r\n    const [isEditItem, setisEditItem] = useState(null);\r\n\r\n    //Adding items\r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            setItems([...items])\r\n        }\r\n        else if (!ToggleSubmit && inputData) {\r\n            setItems(items.map((elem) => {\r\n                if (elem.id === isEditItem) {\r\n                    return { ...elem, name: inputData }\r\n                }\r\n                return elem;\r\n            }))\r\n            setToggleSubmit(true)\r\n            setInputData(\"\");\r\n            setisEditItem(null);\r\n        }\r\n        else {\r\n            const newItem = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, newItem])\r\n            setInputData(\"\")\r\n        }\r\n    }\r\n\r\n    //Deleting items\r\n    const deleteItem = (id) => {\r\n        const updatedData = items.filter((item) => {\r\n            return item.id !== id;\r\n        })\r\n        setItems(updatedData);\r\n    }\r\n\r\n    // Edit Items\r\n    const editItem = (id) => {\r\n        const newEditItems =\r\n            items.find((elem) => {\r\n                return elem.id === id;\r\n            })\r\n\r\n        setToggleSubmit(false)\r\n        setInputData(newEditItems.name);\r\n        setisEditItem(id);\r\n    }\r\n\r\n    // Adding Data to Local Storage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"list\", JSON.stringify(items))\r\n    }, [items])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src={todo} alt=\"todo-logo\" />\r\n                        <figcaption>Add Your List Here 📑</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input\r\n                            onChange={(event) => {\r\n                                setInputData(event.target.value);\r\n                            }}\r\n                            value={inputData}\r\n                            placeholder=\"✍️ Add Items...\"\r\n                            type=\"text\"\r\n                        />\r\n                        {\r\n                            (ToggleSubmit) ?\r\n                                <i\r\n                                    onClick={() => editItem(addItem)}\r\n                                    className=\"far fa-edit add-btn\"\r\n                                    title=\"Add Items\"\r\n\r\n                                /> :\r\n                                <i\r\n                                    className=\"fa fa-plus add-btn\"\r\n                                    title=\"Update Items\"\r\n                                    onClick={addItem}\r\n                                />\r\n                        }\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {items.map((item) => {\r\n                            return (\r\n                                <div className=\"eachItem\" key={item.id}>\r\n                                    <h3>{item.name}</h3>\r\n                                    <div className=\"todo-btn\">\r\n                                        <i\r\n                                            onClick={() => editItem(item.id)}\r\n                                            className=\"far fa-edit add-btn\"\r\n                                            title=\"Edit Items\" />\r\n                                        <i\r\n                                            onClick={() => deleteItem(item.id)}\r\n                                            className=\"far fa-trash-alt add-btn\"\r\n                                            title=\"Delete Items\" ></i>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        <button\r\n                            className=\"btn effect04\"\r\n                            data-sm-link-text=\"Remove All\"\r\n                            onClick={() => {\r\n                                setItems([]);\r\n                            }}\r\n                        > <span>Check List</span> </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}